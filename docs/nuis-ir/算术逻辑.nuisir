add   %a, %b          ; 加法
sub   %a, %b          ; 减法
mul   %a, %b          ; 乘法
div_s %a, %b          ; 有符号除法
div_u %a, %b          ; 无符号除法
rem_s %a, %b          ; 有符号取余
rem_u %a, %b          ; 无符号取余
neg   %a              ; 取负
fadd  %a, %b          ; 浮点加
fsub  %a, %b
fmul  %a, %b
fdiv  %a, %b
fneg  %a
and   %a, %b
or    %a, %b
xor   %a, %b
not   %a
shl   %a, %b          ; 左移
shr_s %a, %b          ; 算术右移
shr_u %a, %b          ; 逻辑右移
rotl  %a, %b          ; 循环左移
rotr  %a, %b          ; 循环右移
icmp_eq  %a, %b       ; ==
icmp_ne  %a, %b       ; !=
icmp_lt  %a, %b       ; <
icmp_le  %a, %b       ; <=
icmp_gt  %a, %b       ; >
icmp_ge  %a, %b       ; >=
fcmp_eq  %a, %b
fcmp_ne  %a, %b
fcmp_lt  %a, %b
fcmp_le  %a, %b
fcmp_gt  %a, %b
fcmp_ge  %a, %b
zext   %a -> %ty      ; 零扩展
sext   %a -> %ty      ; 符号扩展
trunc  %a -> %ty      ; 截断
f2i    %a -> %ty      ; 浮点转整数
i2f    %a -> %ty      ; 整数转浮点
bitcast %a -> %ty     ; 位级 reinterpret
const  42:i32
constf 3.14:f32
add_sat_s  %a, %b      ; 有符号饱和加法
add_sat_u  %a, %b      ; 无符号饱和加法
sub_sat_s  %a, %b      ; 有符号饱和减法
sub_sat_u  %a, %b      ; 无符号饱和减法
mul_sat_s  %a, %b      ; 有符号饱和乘法
mul_sat_u  %a, %b      ; 无符号饱和乘法